{"version":3,"file":"commonHelpers.js","sources":["../src/js/index.js"],"sourcesContent":["// Described in the documentation\nimport iziToast from \"izitoast\";\n// Additional import for styles\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Described in the documentation\nimport SimpleLightbox from \"simplelightbox\";\n// Additional import for styles\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Function to perform the search (example)\nasync function performSearch(query) {\n    // Your search logic here\n    // Call the function to make an HTTP request to the Pixabay API\n    try {\n        await searchImages(query);\n    } catch (error) {\n        console.error('Error performing search:', error.message);\n    }\n}\n\n// Function to make an HTTP request to the Pixabay API\nasync function searchImages(query) {\n    // Variable with the API key for the Pixabay API\n    const API_KEY = '42262858-7b31826aafbc45fb5436f2ee9'; // Declare API_KEY at the beginning of the function\n\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n    try {\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            throw new Error('An error occurred while making the request.');\n        }\n\n        const data = await response.json();\n\n        if (data.hits.length === 0) {\n            // Show message about no results using the iziToast library\n            iziToast.error({\n                title: 'Error',\n                message: 'Sorry, there are no images matching your search query. Please try again!'\n            });\n        } else {\n            // Process the received data and display the images in your web application\n            displayImages(data.hits);\n        }\n    } catch (error) {\n        console.error('Error:', error.message);\n        // Handling error while making the request\n        // You can also show an error message using the iziToast library\n        throw error; // Pass the error up for handling above\n    }\n}\n\n// Function to display images in your web application\nfunction displayImages(images) {\n    // Get reference to the gallery element\n    const gallery = document.getElementById('gallery');\n    \n    // Clear the gallery before displaying new images\n    gallery.innerHTML = '';\n\n    // Iterate through the images and create card for each image\n    images.forEach(image => {\n        const card = createImageCard(image);\n        gallery.appendChild(card);\n    });\n    \n    // Call refresh method of SimpleLightbox after adding new images\n    simpleLightbox.refresh();\n}\n\n// Function to create HTML markup for image card\nfunction createImageCard(image) {\n    // Create elements for the card\n    const card = document.createElement('div');\n    card.classList.add('card');\n\n    // Create image element\n    const img = document.createElement('img');\n    img.src = image.webformatURL;\n    img.alt = image.tags;\n\n    // Create overlay for displaying image details\n    const overlay = document.createElement('div');\n    overlay.classList.add('overlay');\n\n    // Create details for the image\n    const details = document.createElement('div');\n    details.classList.add('details');\n    details.innerHTML = `\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n    `;\n\n    // Append image and details to the card\n    overlay.appendChild(details);\n    card.appendChild(img);\n    card.appendChild(overlay);\n\n    // Add event listener to open modal on click\n    card.addEventListener('click', () => openModal(image.largeImageURL, image.tags));\n\n    return card;\n}\n\n// Function to open modal with large image\nfunction openModal(largeImageUrl, altText) {\n    // Create modal markup\n    const modal = document.createElement('div');\n    modal.classList.add('modal');\n    modal.innerHTML = `\n        <div class=\"modal-content\">\n            <span class=\"close-modal\">&times;</span>\n            <img src=\"${largeImageUrl}\" alt=\"${altText}\">\n        </div>\n    `;\n\n    // Append modal to the body\n    document.body.appendChild(modal);\n\n    // Close modal when close button is clicked\n    const closeModalButton = modal.querySelector('.close-modal');\n    closeModalButton.addEventListener('click', () => {\n        document.body.removeChild(modal);\n    });\n}\n\n// Get references to form elements\nconst form = document.querySelector('.search-form');\nconst queryInput = document.querySelector('.image-query');\n\n// Add event listener for form submission\nform.addEventListener('submit', function(event) {\n    // Prevent default form behavior\n    event.preventDefault();\n\n    // Get the value entered by the user\n    const query = queryInput.value.trim();\n\n    // Check if the search field is empty\n    if (query === '') {\n        // Show error message using iziToast library\n        iziToast.show({\n            title: 'Error',\n            message: 'Please enter a search query.',\n            backgroundColor: '#ff0000', // Set red background color for error message\n            timeout: 5000 // Set the time (in milliseconds) for which the message will be visible (in this case - 5 seconds)\n        });\n        return; // Exit the function if the search field is empty\n    }\n\n    // Call the function to perform the search (your own logic)\n    performSearch(query);\n});\n\n// Initialize SimpleLightbox\nconst simpleLightbox = new SimpleLightbox('.gallery a');"],"names":["performSearch","query","searchImages","error","url","response","data","iziToast","displayImages","images","gallery","image","card","createImageCard","simpleLightbox","img","overlay","details","openModal","largeImageUrl","altText","modal","form","queryInput","event","SimpleLightbox"],"mappings":"6vBAWA,eAAeA,EAAcC,EAAO,CAGhC,GAAI,CACA,MAAMC,EAAaD,CAAK,CAC3B,OAAQE,EAAO,CACZ,QAAQ,MAAM,2BAA4BA,EAAM,OAAO,CAC1D,CACL,CAGA,eAAeD,EAAaD,EAAO,CAI/B,MAAMG,EAAM,qEAA6C,mBAAmBH,CAAK,CAAC,2DAElF,GAAI,CACA,MAAMI,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,6CAA6C,EAGjE,MAAMC,EAAO,MAAMD,EAAS,OAExBC,EAAK,KAAK,SAAW,EAErBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,0EACzB,CAAa,EAGDC,EAAcF,EAAK,IAAI,CAE9B,OAAQH,EAAO,CACZ,cAAQ,MAAM,SAAUA,EAAM,OAAO,EAG/BA,CACT,CACL,CAGA,SAASK,EAAcC,EAAQ,CAE3B,MAAMC,EAAU,SAAS,eAAe,SAAS,EAGjDA,EAAQ,UAAY,GAGpBD,EAAO,QAAQE,GAAS,CACpB,MAAMC,EAAOC,EAAgBF,CAAK,EAClCD,EAAQ,YAAYE,CAAI,CAChC,CAAK,EAGDE,EAAe,QAAO,CAC1B,CAGA,SAASD,EAAgBF,EAAO,CAE5B,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EAGzB,MAAMG,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,IAAMJ,EAAM,aAChBI,EAAI,IAAMJ,EAAM,KAGhB,MAAMK,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,SAAS,EAG/B,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,UAAY;AAAA,oBACJN,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA,MAInCK,EAAQ,YAAYC,CAAO,EAC3BL,EAAK,YAAYG,CAAG,EACpBH,EAAK,YAAYI,CAAO,EAGxBJ,EAAK,iBAAiB,QAAS,IAAMM,EAAUP,EAAM,cAAeA,EAAM,IAAI,CAAC,EAExEC,CACX,CAGA,SAASM,EAAUC,EAAeC,EAAS,CAEvC,MAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAU,IAAI,OAAO,EAC3BA,EAAM,UAAY;AAAA;AAAA;AAAA,wBAGEF,CAAa,UAAUC,CAAO;AAAA;AAAA,MAKlD,SAAS,KAAK,YAAYC,CAAK,EAGNA,EAAM,cAAc,cAAc,EAC1C,iBAAiB,QAAS,IAAM,CAC7C,SAAS,KAAK,YAAYA,CAAK,CACvC,CAAK,CACL,CAGA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAa,SAAS,cAAc,cAAc,EAGxDD,EAAK,iBAAiB,SAAU,SAASE,EAAO,CAE5CA,EAAM,eAAc,EAGpB,MAAMvB,EAAQsB,EAAW,MAAM,KAAI,EAGnC,GAAItB,IAAU,GAAI,CAEdM,EAAS,KAAK,CACV,MAAO,QACP,QAAS,+BACT,gBAAiB,UACjB,QAAS,GACrB,CAAS,EACD,MACH,CAGDP,EAAcC,CAAK,CACvB,CAAC,EAGD,MAAMa,EAAiB,IAAIW,EAAe,YAAY"}